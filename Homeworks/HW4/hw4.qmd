---
title: "HW4: Data Wrangling"
execute: 
  warning: false
  code: true
fig-height: 3
fig-width: 5
fig-align: center
code-fold: false
number-sections: false
---

::: {.callout-caution title="Learning Goals"}
Practice some data wrangling and data viz in guided settings.
The content of the exercises is not necessarily in the order that we learned it, so you'll need to practice identifying appropriate tools for a given task.
:::

## Exercise 1: Birthdays

In Exercises 1-4 we'll return to the daily `Birthdays` dataset in the `mosaic` package:

```{r}
library(mosaic)
data("Birthdays")
head(Birthdays)
```

Address each prompt below using our wrangling tools.

### Part a

```{r}
total_births <- sum(Birthdays$births)
total_births
#70486538

fewest <- Birthdays %>%
  arrange(births) %>%
  head(6)
fewest


leap_day_AK <- Birthdays %>%
  filter(state == "AK", month == 2, day == 29)
leap_day_AK


```

### Part b

```{r}
top_states <- Birthdays %>%
  group_by(state) %>%
  summarize(total_births = sum(births)) %>%
  arrange(desc(total_births)) %>%
  head(6)
top_states


fewest_1988 <- Birthdays %>%
  filter(year == 1988) %>%
  group_by(state) %>%
  summarize(total_births = sum(births)) %>%
  arrange(total_births) %>%
  head(6)
fewest_1988

```


### Exercise 2

### Part a: Monthly Trends

```{r}
Birthdays %>%
  group_by(year, month) %>%
  summarize(total_births = sum(births), .groups = "drop") %>%
  mutate(month_name = month.abb[month]) %>%
  ggplot(aes(x = factor(month_name, levels=month.abb), y = total_births)) +
  geom_boxplot() +
  labs(x = "Month", y = "Total Births", title = "Monthly Birth Trends")
```


# Answer:
# Birth rates tend to be higher in summer months (July, August, September) and lower in winter months (especially February).

### Part b: Weekly Trends

```{r}
library(lubridate)

Birthdays %>%
  mutate(week = week(date)) %>%
  filter(year == 1988, week != 53) %>%
  group_by(state, week) %>%
  summarize(total_births = sum(births), .groups = "drop") %>%
  ggplot(aes(x = week, y = total_births, group = state)) +
  geom_line(alpha = 0.3) +
  labs(title = "Weekly Birth Trends by State (1988)",
       x = "Week of the Year",
       y = "Total Births")

```


# Answer:
# Birth rates show a clear seasonal pattern: higher in the late summer to early fall. Trends are similar across states, though overall volume varies by state population size. There are no prominent outliers.

### Part c: Geography

```{r}
Birthdays %>%
  mutate(week = week(date)) %>%
  filter(year == 1988, state %in% c("MN", "LA"), week != 53) %>%
  group_by(state, week) %>%
  summarize(total_births = sum(births), .groups = "drop") %>%
  ggplot(aes(x = week, y = total_births, color = state)) +
  geom_line() +
  labs(title = "Weekly Birth Trends in MN vs LA (1988)",
       x = "Week of the Year",
       y = "Total Births")

```



# Answer:
# Both MN and LA show a seasonal increase around summer months. However, the seasonal peaks are slightly more pronounced in MN, possibly related to climate.

### Exercise 3

### Part a

# Wrangle data
```{r}
daily_births <- Birthdays %>%
  group_by(date) %>%
  summarize(total = sum(births)) %>%
  mutate(year = lubridate::year(date),
         week_day = lubridate::wday(date, label=TRUE),
         month_day = lubridate::day(date))
```


# First 6 rows
```{r}
head(daily_births)
```


# Confirm dimensions
```{r}
dim(daily_births)  # should return 7305 rows, 5 columns
```


### Part b

```{r}
daily_births %>%
  group_by(month_day) %>%
  summarize(avg_births = mean(total)) %>%
  ggplot(aes(x = month_day, y = avg_births)) +
  geom_point() +
  geom_line() +
  labs(title = "Average Births by Day of Month", x = "Day of Month", y = "Avg Births")
```


# Answer:
# Fewer births occur on the 13th, supporting the theory that superstition affects birth scheduling. The 1st day of each month is also noticeably lower.

### Part c

```{r}
daily_births %>%
  filter(year == 1980) %>%
  ggplot(aes(x = date, y = total, color = week_day)) +
  geom_point() +
  labs(title = "Daily Births in 1980 by Weekday", x = "Date", y = "Births")
```


### Part d

# Answer:
# Weekend births are lower, likely due to fewer scheduled inductions and C-sections. Sharp dips are visible on major holidays, reflecting hospital scheduling practices.

### Exercise 4

### Part a

```{r}
library(lubridate)

holidays <- read.csv("https://mac-stat.github.io/data/US-Holidays.csv") |>
  mutate(date = as.POSIXct(dmy(date)))

daily_births_1980 <- daily_births %>%
  filter(year == 1980) %>%
  left_join(holidays, by = "date") %>%
  mutate(is_holiday = !is.na(holiday))
```


# First 6 rows
```{r}
head(daily_births_1980)
```


# Confirm dimensions
```{r}
dim(daily_births_1980)  # 366 rows, 7 columns
```


### Part b

```{r}
daily_births_1980 %>%
  ggplot(aes(x = date, y = total, color = week_day, shape = is_holiday)) +
  geom_point(size=2) +
  labs(title = "1980 Daily Births with Holidays Marked")
```


### Part c

# Answer:
# Holidays indeed show significantly fewer births, especially prominent on Christmas, New Year's Day, and July 4th.

### Part d

```{r}
daily_births_1980 %>%
  ggplot(aes(x = date, y = total, color = week_day, shape = is_holiday)) +
  geom_point(size=2) +
  geom_text(data = filter(daily_births_1980, is_holiday), aes(label = holiday), angle = 40, vjust = -0.5)
```


### Exercise 5

### Part a

# Top 6 male names (2017)
```{r}
library(babynames)
data(babynames) 

babynames %>%
  filter(year == 2017, sex == "M") %>%
  slice_max(order_by = n, n = 6)
```


# Top 6 overall names
```{r}
babynames %>%
  group_by(name) %>%
  summarize(total = sum(n)) %>%
  slice_max(total, n = 6)
```


# Top 6 female names overall
```{r}
babynames %>%
  filter(sex == "F") %>%
  group_by(name) %>%
  summarize(total = sum(n)) %>%
  slice_max(total, n = 6)
```


### Part b

```{r}
babynames %>%
  group_by(year, sex) %>%
  slice_max(order_by = n, n = 1) %>%
  filter(year %in% 2013:2017)
```

### Part c

```{r}
babynames %>%
  filter(name == "Alicia") %>%
  group_by(year) %>%
  summarize(total = sum(n)) %>%
  ggplot(aes(x = year, y = total)) +
  geom_line() +
  labs(title = "Babies Named Alicia Over Time")
```


### Exercise 6

### Part a

```{r}
babynames_total <- babynames %>%
  pivot_wider(names_from = sex, values_from = n, values_fill = 0) %>%
  group_by(name) %>%
  summarize(M = sum(M), F = sum(F))

head(babynames_total, 3)
```


### Part b

# filter(M > 25000, F > 25000) keeps names popular for both sexes
# mutate calculates the proportion of female names
# arrange(desc(ratio)) orders names from highest female proportion to lowest

### Part c

```{r}
popular_names <- babynames_total %>%
  filter(M > 25000, F > 25000) %>%
  mutate(ratio = F / (F + M)) %>%
  arrange(desc(ratio))

popular_names %>%
  filter(ratio >= 0.45, ratio <= 0.55)
```


### Part d

```{r}
babynames %>%
  filter(name == "Jordan") %>%
  ggplot(aes(x = year, y = n, color = sex)) +
  geom_line() +
  labs(title = "Popularity of the Name Jordan by Sex")
```


# Answer:
# The name Jordan gained popularity among both sexes, peaking in the 1990s. It became notably gender-neutral over time.

### Exercise 7

### Part a
# Answer:
# Each row is an observation of a laugh type and its percentage used per year on Reddit.

### Part b

```{r}
laughs <- read.csv("https://mac-stat.github.io/data/reddit-laughs.csv")
library(dplyr)
library(tidyr)

laugh_plot_data <- laughs %>%
  select(id, starts_with("share_")) %>%
  pivot_longer(
    cols = starts_with("share_"),
    names_to = "year",
    names_prefix = "share_",
    values_to = "share"
  ) %>%
  filter(id %in% c("lol", "haha", "lmao", "ha", "heh")) %>%
  mutate(
    year = as.integer(year),
    share = share * 100
  ) %>%
  arrange(id, year)

head(laugh_plot_data)
dim(laugh_plot_data)
```


### Part c

```{r}
laugh_plot_data %>%
  ggplot(aes(x = year, y = share, color = id)) +
  geom_line(size = 1.2) +
  labs(title = "Evolution of Laugh Expressions on Reddit", y = "Share (%)", x = "Year")
```


# Answer:
# "Haha" and "lol" dominate but show inverse trends. "Haha" usage declines as "lol" rises

